{"inputSpecification": "<p>The first line contains an integer $$$T$$$ ($$$1 \\leq T \\leq 10^5$$$) \u2014 the number of test cases.</p><p>Each test case description starts with two integers $$$n, q$$$ ($$$1 \\leq n, q \\leq 10^5$$$) \u2014 the length of the array and the number of queries. The following $$$q$$$ lines contain the description of queries: $$$1~x~y$$$ ($$$1 \\leq x \\leq n$$$, $$$0 \\leq y \\leq 10^9$$$) for queries of the first type and $$$2~l~r$$$ ($$$1 \\leq l \\leq r \\leq n$$$) for queries of the second type. </p><p>It is guaranteed that the sum of $$$n$$$ as well as the sum of $$$q$$$ does not exceed $$$10^6$$$.</p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": null, "outputSpecification": "<p>For each query of the second type print its result on a separate line.</p>", "samples": [{"input": "\n2\n6 5\n2 1 6\n1 3 2\n2 2 4\n1 6 3\n2 1 6\n5 3\n1 3 7\n1 1 4\n2 1 5\n", "output": "\n0\n2\n5\n11\n"}], "statement": "<p><span class=\"tex-font-style-it\">This is an unusual problem in an unusual contest, here is the announcement: <a href=\"//codeforces.com/blog/entry/73543\">http://codeforces.com/blog/entry/73543</a></span></p><p>You are given an array $$$A$$$ of length $$$n$$$, initially filled with zeros. You need to process $$$q$$$ queries to the array, each of one of the following types: <ol> <li> <span class=\"tex-font-style-tt\">1 x y</span>: you need to assign $$$A_x=y$$$; </li><li> <span class=\"tex-font-style-tt\">2 l r</span>: you need to print $$$\\sum\\limits_{i=l}^r A_i$$$. </li></ol> Furthermore, there are $$$T$$$ independent tests you need to process.</p>", "timeLimit": {"unit": "seconds", "value": 2.5}, "title": "C. Segment tree or Fenwick?"}{"inputSpecification": "<p>Input contains single number $$$x$$$ consisting of exactly 5 digits, leading zeroes are allowed.</p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": null, "outputSpecification": "<p>Output the number after applying all operations.</p>", "samples": [{"input": "\n00000\n", "output": "\n61376\n"}, {"input": "\n12345\n", "output": "\n07769\n"}], "statement": "<p><span class=\"tex-font-style-it\">This is an unusual problem in an unusual contest, here is the announcement: <a href=\"//codeforces.com/blog/entry/73543\">http://codeforces.com/blog/entry/73543</a></span></p><p>You have the safe lock which consists of 5 decimal digits. If you rotate some digit, it increases by one, except 9 which becomes 0.</p><p>Initially, the lock contains number $$$x$$$. To unlock the safe you must do the following operations in order (and be careful, don't mix up if and else statements).</p><p>If sum of digits on positions 1 and 4 is greater than 10, rotate digit on position 1 by 3 times, else rotate digit on position 4 by 8 times.</p><p>If sum of digits on positions 3 and 2 is greater than 8, rotate digit on position 4 by 9 times, else rotate digit on position 5 by 8 times.</p><p>If digit on position 3 is odd, rotate digit on position 3 by 3 times, else rotate digit on position 3 by 4 times.</p><p>If digit on position 5 is greater than digit on position 2, rotate digit on position 4 by 1 times, else rotate digit on position 2 by 7 times.</p><p>If digit on position 1 is odd, rotate digit on position 1 by 3 times, else rotate digit on position 3 by 5 times.</p><p>If digit on position 4 is odd, rotate digit on position 4 by 7 times, else rotate digit on position 1 by 9 times.</p><p>If digit on position 4 is greater than digit on position 1, rotate digit on position 4 by 9 times, else rotate digit on position 4 by 2 times.</p><p>If digit on position 1 is greater than digit on position 3, rotate digit on position 2 by 1 times, else rotate digit on position 3 by 1 times.</p><p>If digit on position 5 is greater than digit on position 3, rotate digit on position 4 by 5 times, else rotate digit on position 5 by 8 times.</p><p>If sum of digits on positions 1 and 3 is greater than 8, rotate digit on position 4 by 5 times, else rotate digit on position 2 by 5 times.</p><p>If digit on position 1 is greater than digit on position 4, rotate digit on position 4 by 3 times, else rotate digit on position 2 by 3 times.</p><p>If sum of digits on positions 3 and 1 is greater than 9, rotate digit on position 2 by 9 times, else rotate digit on position 2 by 2 times.</p><p>If sum of digits on positions 4 and 3 is greater than 10, rotate digit on position 4 by 7 times, else rotate digit on position 5 by 7 times.</p><p>If digit on position 3 is greater than digit on position 2, rotate digit on position 3 by 2 times, else rotate digit on position 4 by 6 times.</p><p>If digit on position 1 is greater than digit on position 3, rotate digit on position 1 by 9 times, else rotate digit on position 2 by 9 times.</p><p>If digit on position 3 is odd, rotate digit on position 3 by 9 times, else rotate digit on position 1 by 5 times.</p><p>If sum of digits on positions 3 and 5 is greater than 9, rotate digit on position 3 by 4 times, else rotate digit on position 3 by 9 times.</p><p>If digit on position 3 is greater than digit on position 1, rotate digit on position 5 by 1 times, else rotate digit on position 5 by 7 times.</p><p>If digit on position 1 is greater than digit on position 3, rotate digit on position 2 by 9 times, else rotate digit on position 4 by 6 times.</p><p>If sum of digits on positions 2 and 3 is greater than 10, rotate digit on position 2 by 2 times, else rotate digit on position 3 by 6 times.</p>", "timeLimit": {"unit": "seconds", "value": 2.0}, "title": "F. Keep talking and nobody explodes \u2013 easy"}{"inputSpecification": "<p>The first line contains two integers $$$n, m$$$ ($$$1 \\leq n, m \\leq 5 \\cdot 10^4$$$) denoting the number of vertices and the number of edges of $$$G$$$.</p><p>Each of the next $$$m$$$ lines contains two integers $$$u, v$$$ ($$$1 \\leq u \\neq v \\leq n$$$), denoting the edge from $$$u$$$ to $$$v$$$. </p><p>It's guaranteed that the given graph does not contain any cycles.</p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": null, "outputSpecification": "<p>Print one integer \u2014 the answer to the problem.</p>", "samples": [{"input": "\n5 4\n1 2\n2 3\n3 4\n4 5\n", "output": "\n55\n"}, {"input": "\n12 6\n1 2\n3 4\n5 6\n8 7\n10 9\n12 11\n", "output": "\n30\n"}, {"input": "\n7 6\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n", "output": "\n45\n"}], "statement": "<p><span class=\"tex-font-style-it\">This is an unusual problem in an unusual contest, here is the announcement: <a href=\"//codeforces.com/blog/entry/73543\">http://codeforces.com/blog/entry/73543</a></span></p><p>You are given a directed acyclic graph $$$G$$$ with $$$n$$$ vertices and $$$m$$$ edges. Denote by $$$R(v)$$$ the set of all vertices $$$u$$$ reachable from $$$v$$$ by moving along the edges of $$$G$$$. Find $$$\\sum\\limits_{v=1}^n |R(v)|^2$$$.</p>", "timeLimit": {"unit": "seconds", "value": 3.0}, "title": "B. DAG"}{"inputSpecification": "<p>The first line contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le k \\le n \\le 3 \\cdot 10^5$$$).</p><p>The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$ |a_i| \\le 10^6$$$). </p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": null, "outputSpecification": "<p>Print the maximum cost you can obtain by dividing the array $$$a$$$ into $$$k$$$ nonempty consecutive subarrays. </p>", "samples": [{"input": "\n5 2\n-1 -2 5 -4 8\n", "output": "\n15\n"}, {"input": "\n7 6\n-3 0 -1 -2 -2 -4 -1\n", "output": "\n-45\n"}, {"input": "\n4 1\n3 -1 6 0\n", "output": "\n8\n"}], "statement": "<p>You are given an array $$$a_1, a_2, \\dots, a_n$$$ and an integer $$$k$$$.</p><p>You are asked to divide this array into $$$k$$$ non-empty consecutive subarrays. Every element in the array should be included in exactly one subarray. Let $$$f(i)$$$ be the index of subarray the $$$i$$$-th element belongs to. Subarrays are numbered from left to right and from $$$1$$$ to $$$k$$$.</p><p>Let the cost of division be equal to $$$\\sum\\limits_{i=1}^{n} (a_i \\cdot f(i))$$$. For example, if $$$a = [1, -2, -3, 4, -5, 6, -7]$$$ and we divide it into $$$3$$$ subbarays in the following way: $$$[1, -2, -3], [4, -5], [6, -7]$$$, then the cost of division is equal to $$$1 \\cdot 1 - 2 \\cdot 1 - 3 \\cdot 1 + 4 \\cdot 2 - 5 \\cdot 2 + 6 \\cdot 3 - 7 \\cdot 3 = -9$$$.</p><p>Calculate the maximum cost you can obtain by dividing the array $$$a$$$ into $$$k$$$ non-empty consecutive subarrays. </p>", "timeLimit": {"unit": "seconds", "value": 2.0}, "title": "D. Array Splitting"}{"inputSpecification": "<p>The first line contains a single integer $$$l$$$ ($$$1 \\le l \\le 10^5$$$) \u2014 the number of lines in the function.</p><p>Each of the next $$$l$$$ lines contains a single command of one of three types:</p><p><ul> <li> for $$$n$$$ ($$$1 \\le n \\le 100$$$) \u2014 for loop; </li><li> end \u2014 every command between \"for $$$n$$$\" and corresponding \"end\" is executed $$$n$$$ times; </li><li> add \u2014 adds <span class=\"tex-font-style-tt\">1</span> to $$$x$$$. </li></ul></p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": "<p>In the first example the first \"add\" is executed 1 time, the second \"add\" is executed 150 times and the last \"add\" is executed 10 times. Note that \"for $$$n$$$\" can be immediately followed by \"end\" and that \"add\" can be outside of any for loops.</p><p>In the second example there are no commands \"add\", thus the returning value is 0.</p><p>In the third example \"add\" command is executed too many times, which causes $$$x$$$ to go over $$$2^{32}-1$$$.</p>", "outputSpecification": "<p>If overflow happened during execution of $$$f(0)$$$, then output \"OVERFLOW!!!\", otherwise print the resulting value of $$$x$$$.</p>", "samples": [{"input": "\n9\nadd\nfor 43\nend\nfor 10\nfor 15\nadd\nend\nadd\nend\n", "output": "\n161\n"}, {"input": "\n2\nfor 62\nend\n", "output": "\n0\n"}, {"input": "\n11\nfor 100\nfor 100\nfor 100\nfor 100\nfor 100\nadd\nend\nend\nend\nend\nend\n", "output": "\nOVERFLOW!!!\n"}], "statement": "<p>You are given a function $$$f$$$ written in some basic language. The function accepts an integer value, which is immediately written into some variable $$$x$$$. $$$x$$$ is an integer variable and can be assigned values from $$$0$$$ to $$$2^{32}-1$$$. The function contains three types of commands:</p><p><ul> <li> for $$$n$$$ \u2014 for loop; </li><li> end \u2014 every command between \"for $$$n$$$\" and corresponding \"end\" is executed $$$n$$$ times; </li><li> add \u2014 adds <span class=\"tex-font-style-tt\">1</span> to $$$x$$$. </li></ul></p><p>After the execution of these commands, value of $$$x$$$ is returned.</p><p>Every \"for $$$n$$$\" is matched with \"end\", thus the function is guaranteed to be valid. \"for $$$n$$$\" can be immediately followed by \"end\".\"add\" command can be outside of any for loops.</p><p>Notice that \"add\" commands might overflow the value of $$$x$$$! It means that the value of $$$x$$$ becomes greater than $$$2^{32}-1$$$ after some \"add\" command. </p><p>Now you run $$$f(0)$$$ and wonder if the resulting value of $$$x$$$ is correct or some overflow made it incorrect.</p><p>If overflow happened then output \"OVERFLOW!!!\", otherwise print the resulting value of $$$x$$$.</p>", "timeLimit": {"unit": "second", "value": 1.0}, "title": "B. Catch Overflow!"}{"inputSpecification": "<p>The first line contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n \\le 2 \\cdot 10^4$$$, $$$1 \\le k \\le \\min(100, n)$$$) \u2014 the length of the array $$$a$$$ and the number of subsegments in the partition.</p><p>The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 2 \\cdot 10^4$$$) \u2014 the array $$$a$$$.</p>", "memoryLimit": {"unit": "megabytes", "value": 512.0}, "note": "<p>The optimal partition in the first example is next: $$$6$$$ $$$1$$$ $$$7$$$ $$$\\bigg|$$$ $$$4$$$.</p><p>The optimal partition in the second example is next: $$$6$$$ $$$\\bigg|$$$ $$$1$$$ $$$\\bigg|$$$ $$$7$$$ $$$4$$$.</p><p>One of the optimal partitions in the third example is next: $$$5$$$ $$$\\bigg|$$$ $$$1$$$ $$$5$$$ $$$\\bigg|$$$ $$$1$$$ $$$\\bigg|$$$ $$$5$$$.</p>", "outputSpecification": "<p>Print single integer \u2014 the minimal weight among all possible partitions.</p>", "samples": [{"input": "\n4 2\n6 1 7 4\n", "output": "\n25\n"}, {"input": "\n4 3\n6 1 7 4\n", "output": "\n21\n"}, {"input": "\n5 4\n5 1 5 1 5\n", "output": "\n21\n"}], "statement": "<p>You are given array $$$a_1, a_2, \\dots, a_n$$$. You need to split it into $$$k$$$ subsegments (so every element is included in exactly one subsegment).</p><p>The weight of a subsegment $$$a_l, a_{l+1}, \\dots, a_r$$$ is equal to $$$(r - l + 1) \\cdot \\max\\limits_{l \\le i \\le r}(a_i)$$$. The weight of a partition is a total weight of all its segments.</p><p>Find the partition of minimal weight.</p>", "timeLimit": {"unit": "seconds", "value": 5.0}, "title": "G. Yet Another Partiton Problem"}{"inputSpecification": "<p>The first line contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n, m \\le 2 \\cdot 10^5$$$) \u2014 the number of intervals and the number of queries, respectively.</p><p>Each of the next $$$n$$$ lines contains two integer numbers $$$l_i$$$ and $$$r_i$$$ ($$$0 \\le l_i &lt; r_i \\le 5 \\cdot 10^5$$$) \u2014 the given intervals.</p><p>Each of the next $$$m$$$ lines contains two integer numbers $$$x_i$$$ and $$$y_i$$$ ($$$0 \\le x_i &lt; y_i \\le 5 \\cdot 10^5$$$) \u2014 the queries.</p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": "<p>In the first example there are three queries:</p><p><ol> <li> query $$$[1; 3]$$$ can be covered by interval $$$[1; 3]$$$; </li><li> query $$$[1; 4]$$$ can be covered by intervals $$$[1; 3]$$$ and $$$[2; 4]$$$. There is no way to cover $$$[1; 4]$$$ by a single interval; </li><li> query $$$[3; 4]$$$ can be covered by interval $$$[2; 4]$$$. It doesn't matter that the other points are covered besides the given query. </li></ol></p><p>In the second example there are four queries:</p><p><ol> <li> query $$$[1; 2]$$$ can be covered by interval $$$[1; 3]$$$. Note that you can choose any of the two given intervals $$$[1; 3]$$$; </li><li> query $$$[1; 3]$$$ can be covered by interval $$$[1; 3]$$$; </li><li> query $$$[1; 4]$$$ can't be covered by any set of intervals; </li><li> query $$$[1; 5]$$$ can't be covered by any set of intervals. Note that intervals $$$[1; 3]$$$ and $$$[4; 5]$$$ together don't cover $$$[1; 5]$$$ because even non-integer points should be covered. Here $$$3.5$$$, for example, isn't covered. </li></ol></p>", "outputSpecification": "<p>Print $$$m$$$ integer numbers. The $$$i$$$-th number should be the answer to the $$$i$$$-th query: either the minimal number of intervals you have to take so that every point (<span class=\"tex-font-style-bf\">not necessarily integer</span>) from $$$x_i$$$ to $$$y_i$$$ is covered by at least one of them or <span class=\"tex-font-style-tt\">-1</span> if you can't choose intervals so that every point from $$$x_i$$$ to $$$y_i$$$ is covered.</p>", "samples": [{"input": "\n2 3\n1 3\n2 4\n1 3\n1 4\n3 4\n", "output": "\n1\n2\n1\n"}, {"input": "\n3 4\n1 3\n1 3\n4 5\n1 2\n1 3\n1 4\n1 5\n", "output": "\n1\n1\n-1\n-1\n"}], "statement": "<p>You are given $$$n$$$ intervals in form $$$[l; r]$$$ on a number line.</p><p>You are also given $$$m$$$ queries in form $$$[x; y]$$$. What is the minimal number of intervals you have to take so that every point (<span class=\"tex-font-style-bf\">not necessarily integer</span>) from $$$x$$$ to $$$y$$$ is covered by at least one of them? </p><p>If you can't choose intervals so that every point from $$$x$$$ to $$$y$$$ is covered, then print <span class=\"tex-font-style-tt\">-1</span> for that query.</p>", "timeLimit": {"unit": "seconds", "value": 2.0}, "title": "E. Minimal Segment Cover"}{"inputSpecification": "<p>The first line contains one integer $$$n$$$ ($$$1 \\le n \\le 3 \\cdot 10^5$$$).</p><p>The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots , a_n$$$ ($$$1 \\le a_i \\le n$$$). </p><p><span class=\"tex-font-style-bf\">This array can contain the same integers.</span></p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": "<p>There are $$$7$$$ subpermutations in the first test case. Their segments of indices are $$$[1, 4]$$$, $$$[3, 3]$$$, $$$[3, 6]$$$, $$$[4, 7]$$$, $$$[6, 7]$$$, $$$[7, 7]$$$ and $$$[7, 8]$$$.</p><p>In the second test case $$$6$$$ subpermutations exist: $$$[1, 1]$$$, $$$[2, 2]$$$, $$$[2, 3]$$$, $$$[3, 4]$$$, $$$[4, 4]$$$ and $$$[4, 5]$$$.</p>", "outputSpecification": "<p>Print the number of subpermutations of the array $$$a$$$.</p>", "samples": [{"input": "\n8\n2 4 1 3 4 2 1 2\n", "output": "\n7\n"}, {"input": "\n5\n1 1 2 1 2\n", "output": "\n6\n"}], "statement": "<p>You have an array $$$a_1, a_2, \\dots, a_n$$$. </p><p>Let's call some subarray $$$a_l, a_{l + 1}, \\dots , a_r$$$ of this array a <span class=\"tex-font-style-it\">subpermutation</span> if it contains all integers from $$$1$$$ to $$$r-l+1$$$ exactly once. For example, array $$$a = [2, 2, 1, 3, 2, 3, 1]$$$ contains $$$6$$$ subarrays which are subpermutations: $$$[a_2 \\dots a_3]$$$, $$$[a_2 \\dots a_4]$$$, $$$[a_3 \\dots a_3]$$$, $$$[a_3 \\dots a_5]$$$, $$$[a_5 \\dots a_7]$$$, $$$[a_7 \\dots a_7]$$$.</p><p>You are asked to calculate the number of subpermutations.</p>", "timeLimit": {"unit": "seconds", "value": 2.0}, "title": "F. The Number of Subpermutations"}{"inputSpecification": "<p>The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 100$$$) \u2014 the number of queries.</p><p>The only line of each query contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n \\le 10^{18}$$$, $$$2 \\le k \\le 10^{18}$$$).</p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": "<p>Steps for the first test case are: $$$59 \\rightarrow 58 \\rightarrow 57 \\rightarrow 19 \\rightarrow 18 \\rightarrow 6 \\rightarrow 2 \\rightarrow 1 \\rightarrow 0$$$.</p><p>In the second test case you have to divide $$$n$$$ by $$$k$$$ $$$18$$$ times and then decrease $$$n$$$ by $$$1$$$.</p>", "outputSpecification": "<p>For each query print the minimum number of steps to reach $$$0$$$ from $$$n$$$ in single line. </p>", "samples": [{"input": "\n2\n59 3\n1000000000000000000 10\n", "output": "\n8\n19\n"}], "statement": "<p>You are given an integer $$$n$$$ and an integer $$$k$$$.</p><p>In one step you can do one of the following moves: </p><ul> <li> decrease $$$n$$$ by $$$1$$$; </li><li> divide $$$n$$$ by $$$k$$$ if $$$n$$$ is divisible by $$$k$$$. </li></ul><p>For example, if $$$n = 27$$$ and $$$k = 3$$$ you can do the following steps: $$$27 \\rightarrow 26 \\rightarrow 25 \\rightarrow 24 \\rightarrow 8 \\rightarrow 7 \\rightarrow 6 \\rightarrow 2 \\rightarrow 1 \\rightarrow 0$$$.</p><p>You are asked to calculate the minimum number of steps to reach $$$0$$$ from $$$n$$$. </p>", "timeLimit": {"unit": "second", "value": 1.0}, "title": "A. From Hero to Zero"}{"inputSpecification": "<p>The first line contains single integer $$$T$$$ ($$$ 1 \\le T \\le 2 \\cdot 10^5$$$) \u2014 number of queries. Next $$$2 \\cdot T$$$ lines contain descriptions of queries. All queries are independent. </p><p>The first line of each query contains two integers $$$n$$$, $$$k$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$, $$$0 \\le k &lt; n$$$) \u2014 the number of points and constant $$$k$$$.</p><p>The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_1 &lt; a_2 &lt; \\dots &lt; a_n \\le 10^9$$$) \u2014 points in ascending order.</p><p>It's guaranteed that $$$\\sum{n}$$$ doesn't exceed $$$2 \\cdot 10^5$$$.</p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": null, "outputSpecification": "<p>Print $$$T$$$ integers \u2014 corresponding points $$$x$$$ which have minimal possible value of $$$f_k(x)$$$. If there are multiple answers you can print any of them.</p>", "samples": [{"input": "\n3\n3 2\n1 2 5\n2 1\n1 1000000000\n1 0\n4\n", "output": "\n3\n500000000\n4\n"}], "statement": "<p>At first, there was a legend related to the name of the problem, but now it's just a formal statement.</p><p>You are given $$$n$$$ points $$$a_1, a_2, \\dots, a_n$$$ on the $$$OX$$$ axis. Now you are asked to find such an integer point $$$x$$$ on $$$OX$$$ axis that $$$f_k(x)$$$ is minimal possible.</p><p>The function $$$f_k(x)$$$ can be described in the following way: </p><ul> <li> form a list of distances $$$d_1, d_2, \\dots, d_n$$$ where $$$d_i = |a_i - x|$$$ (distance between $$$a_i$$$ and $$$x$$$); </li><li> sort list $$$d$$$ in non-descending order; </li><li> take $$$d_{k + 1}$$$ as a result. </li></ul><p>If there are multiple optimal answers you can print any of them.</p>", "timeLimit": {"unit": "seconds", "value": 2.0}, "title": "C. Electrification"}{"inputSpecification": "<p>The first line of the input contains a single integer <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>m</i>\u2009\u2264\u2009200\u2009000</span>) \u2013 the number of ships. The next <span class=\"tex-span\"><i>m</i></span> lines describe one jump coordinate each, given as an arithmetic expression. An expression has the form <span class=\"tex-font-style-tt\">(a+b)/c</span>. Namely, it consists of: an opening parenthesis <span class=\"tex-font-style-tt\">(</span>, a positive integer <span class=\"tex-span\"><i>a</i></span> of up to two decimal digits, a plus sign <span class=\"tex-font-style-tt\">+</span>, a positive integer <span class=\"tex-span\"><i>b</i></span> of up to two decimal digits, a closing parenthesis <span class=\"tex-font-style-tt\">)</span>, a slash <span class=\"tex-font-style-tt\">/</span>, and a positive integer <span class=\"tex-span\"><i>c</i></span> of up to two decimal digits.</p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": "<p>In the sample testcase, the second and the third ship will both end up at the coordinate <span class=\"tex-span\">3</span>.</p><p>Note that this problem has only two versions \u2013 easy and hard.</p>", "outputSpecification": "<p>Print a single line consisting of <span class=\"tex-span\"><i>m</i></span> space-separated integers. The <span class=\"tex-span\"><i>i</i></span>-th integer should be equal to the number of ships whose coordinate is equal to that of the <span class=\"tex-span\"><i>i</i></span>-th ship (including the <span class=\"tex-span\"><i>i</i></span>-th ship itself).</p>", "samples": [{"input": "4<br/>(99+98)/97<br/>(26+4)/10<br/>(12+33)/15<br/>(5+1)/7<br/>", "output": "1 2 2 1 "}], "statement": "<p>The Rebel fleet is on the run. It consists of <span class=\"tex-span\"><i>m</i></span> ships currently gathered around a single planet. Just a few seconds ago, the vastly more powerful Empire fleet has appeared in the same solar system, and the Rebels will need to escape into hyperspace. In order to spread the fleet, the captain of each ship has independently come up with the coordinate to which that ship will jump. In the obsolete navigation system used by the Rebels, this coordinate is given as the value of an arithmetic expression of the form <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/3d4d95f2669ed832926be0ef1c09fdbc72a99998.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>.</p><p>To plan the future of the resistance movement, Princess Heidi needs to know, for each ship, how many ships are going to end up at the same coordinate after the jump. You are her only hope!</p>", "timeLimit": {"unit": "seconds", "value": 5.0}, "title": "D1. Hyperspace Jump (easy)"}{"inputSpecification": "<p>The first line contains two space-separated integers <span class=\"tex-span\"><i>R</i>,\u2009<i>B</i>(1\u2009\u2264\u2009<i>R</i>,\u2009<i>B</i>\u2009\u2264\u200910)</span>. For <span class=\"tex-span\">1\u2009\u2264\u2009<i>i</i>\u2009\u2264\u2009<i>R</i></span>, the <span class=\"tex-span\"><i>i</i>\u2009+\u20091</span>-th line contains two space-separated integers <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">|<i>x</i><sub class=\"lower-index\"><i>i</i></sub>|,\u2009|<i>y</i><sub class=\"lower-index\"><i>i</i></sub>|\u2009\u2264\u200910000</span>) denoting the coordinates of the <span class=\"tex-span\"><i>i</i></span>-th Rebel spaceship. The following <span class=\"tex-span\"><i>B</i></span> lines have the same format, denoting the position of bases. It is guaranteed that no two points coincide and that no three points are on the same line.</p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": "<p>For the first example, one possible way is to connect the Rebels and bases in order.</p><p>For the second example, there is no perfect matching between Rebels and bases.</p>", "outputSpecification": "<p>If it is possible to connect Rebel spaceships and bases so as satisfy the constraint, output <span class=\"tex-font-style-tt\">Yes</span>, otherwise output <span class=\"tex-font-style-tt\">No</span> (without quote).</p>", "samples": [{"input": "3 3<br/>0 0<br/>2 0<br/>3 1<br/>-2 1<br/>0 3<br/>2 2<br/>", "output": "Yes<br/>"}, {"input": "2 1<br/>1 0<br/>2 2<br/>3 1<br/>", "output": "No<br/>"}], "statement": "<p>The Rebel fleet is afraid that the Empire might want to strike back again. Princess Heidi needs to know if it is possible to assign <span class=\"tex-span\"><i>R</i></span> Rebel spaceships to guard <span class=\"tex-span\"><i>B</i></span> bases so that every base has exactly one guardian and each spaceship has exactly one assigned base (in other words, the assignment is a perfect matching). Since she knows how reckless her pilots are, she wants to be sure that any two (straight) paths \u2013 from a base to its assigned spaceship \u2013 do not intersect in the galaxy plane (that is, in 2D), and so there is no risk of collision.</p>", "timeLimit": {"unit": "second", "value": 1.0}, "title": "E1. Guard Duty (easy)"}{"inputSpecification": "<p>The first line of the input contains one number <span class=\"tex-span\"><i>N</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>N</i>\u2009\u2264\u200910</span>) \u2013 the dimension of each map. Next <span class=\"tex-span\"><i>N</i></span> lines each contain <span class=\"tex-span\"><i>N</i></span> characters, depicting the first map: 'X' indicates a star, while 'O' indicates an empty quadrant of space. Next <span class=\"tex-span\"><i>N</i></span> lines each contain <span class=\"tex-span\"><i>N</i></span> characters, depicting the second map in the same format.</p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": "<p>In the first test, you can match the first map to the second map by first flipping the first map along the vertical axis, and then by rotating it 90 degrees clockwise.</p><p> </p>", "outputSpecification": "<p>The only line of output should contain the word <span class=\"tex-font-style-tt\">Yes</span> if the maps are identical, or <span class=\"tex-font-style-tt\">No</span> if it is impossible to match them by performing rotations and translations.</p>", "samples": [{"input": "4<br/>XOOO<br/>XXOO<br/>OOOO<br/>XXXX<br/>XOOO<br/>XOOO<br/>XOXO<br/>XOXX<br/>", "output": "Yes<br/>"}, {"input": "2<br/>XX<br/>OO<br/>XO<br/>OX<br/>", "output": "No<br/>"}], "statement": "<p>The stardate is 1977 and the science and art of detecting Death Stars is in its infancy. Princess Heidi has received information about the stars in the nearby solar system from the Rebel spies and now, to help her identify the exact location of the Death Star, she needs to know whether this information is correct. </p><p>Two rebel spies have provided her with the maps of the solar system. Each map is an <span class=\"tex-span\"><i>N</i>\u2009\u00d7\u2009<i>N</i></span> grid, where each cell is either occupied by a star or empty. To see whether the information is correct, Heidi needs to know whether the two maps are of the same solar system, or if possibly one of the spies is actually an Empire double agent, feeding her false information.</p><p>Unfortunately, spies may have accidentally rotated a map by 90, 180, or 270 degrees, or flipped it along the vertical or the horizontal axis, before delivering it to Heidi. If Heidi can rotate or flip the maps so that two of them become identical, then those maps are of the same solar system. Otherwise, there are traitors in the Rebel ranks! Help Heidi find out.</p>", "timeLimit": {"unit": "second", "value": 1.0}, "title": "A1. Death Stars (easy)"}{"inputSpecification": "<p>The first line of the input contains three space-separated integers <span class=\"tex-span\"><i>N</i></span>, <span class=\"tex-span\"><i>k</i></span> and <span class=\"tex-span\"><i>p</i></span> (<span class=\"tex-span\"><i>k</i>\u2009\u2264\u2009<i>N</i>\u2009\u2264\u2009500\u2009000</span>, <span class=\"tex-span\">2\u2009\u2264\u2009<i>k</i>\u2009\u2264\u2009100</span>, <span class=\"tex-span\">2\u2009\u2264\u2009<i>p</i>\u2009\u2264\u2009100</span>) \u2013 the number of elements in <span class=\"tex-span\"><i>A</i></span>, the number of parts <span class=\"tex-span\"><i>A</i></span> should be split into, and the modulo for computing scores, respectively.</p><p>The second line contains <span class=\"tex-span\"><i>N</i></span> space-separated integers that are the elements of <span class=\"tex-span\"><i>A</i></span>. Each integer is from the interval <span class=\"tex-span\">[1,\u20091\u2009000\u2009000]</span>.</p>", "memoryLimit": {"unit": "megabytes", "value": 512.0}, "note": "<p>In the first example, if the input sequence is split as <span class=\"tex-span\">(3)</span>, <span class=\"tex-span\">(4,\u20097)</span>, <span class=\"tex-span\">(2)</span>, the total score would be <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/cda784c5e257ade4e1c10dc44b2c224a0078da61.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. It is easy to see that this score is the smallest possible.</p><p>In the second example, one possible way to obtain score <span class=\"tex-span\">13</span> is to make the following split: <span class=\"tex-span\">(16,\u20093)</span>, <span class=\"tex-span\">(24)</span>, <span class=\"tex-span\">(13)</span>, <span class=\"tex-span\">(9,\u20098)</span>, <span class=\"tex-span\">(7,\u20095,\u200912,\u200912)</span>.</p>", "outputSpecification": "<p>Output the number <span class=\"tex-span\"><i>S</i></span> as described in the problem statement.</p>", "samples": [{"input": "4 3 10<br/>3 4 7 2<br/>", "output": "6<br/>"}, {"input": "10 5 12<br/>16 3 24 13 9 8 7 5 12 12<br/>", "output": "13<br/>"}], "statement": "<p>Heidi is now just one code away from breaking the encryption of the Death Star plans. The screen that should be presenting her with the description of the next code looks almost like the previous one, though who would have thought that the evil Empire engineers would fill this small screen with several million digits! It is just ridiculous to think that anyone would read them all...</p><p>Heidi is once again given a sequence <span class=\"tex-span\"><i>A</i></span> and two integers <span class=\"tex-span\"><i>k</i></span> and <span class=\"tex-span\"><i>p</i></span>. She needs to find out what the encryption key <span class=\"tex-span\"><i>S</i></span> is.</p><p>Let <span class=\"tex-span\"><i>X</i></span> be a sequence of integers, and <span class=\"tex-span\"><i>p</i></span> a positive integer. We define the <span class=\"tex-font-style-underline\">score</span> of <span class=\"tex-span\"><i>X</i></span> to be the sum of the elements of <span class=\"tex-span\"><i>X</i></span> modulo <span class=\"tex-span\"><i>p</i></span>.</p><p>Heidi is given a sequence <span class=\"tex-span\"><i>A</i></span> that consists of <span class=\"tex-span\"><i>N</i></span> integers, and also given integers <span class=\"tex-span\"><i>k</i></span> and <span class=\"tex-span\"><i>p</i></span>. Her goal is to split <span class=\"tex-span\"><i>A</i></span> into <span class=\"tex-span\"><i>k</i></span> parts such that: </p><ul> <li> Each part contains at least <span class=\"tex-span\">1</span> element of <span class=\"tex-span\"><i>A</i></span>, and each part consists of contiguous elements of <span class=\"tex-span\"><i>A</i></span>. </li><li> No two parts overlap. </li><li> The total sum <span class=\"tex-span\"><i>S</i></span> of the scores of those parts is <span class=\"tex-font-style-bf\">minimized</span> (not maximized!). </li></ul><p>Output the sum <span class=\"tex-span\"><i>S</i></span>, which is the encryption code.</p>", "timeLimit": {"unit": "seconds", "value": 2.2}, "title": "C3. Encryption (hard)"}{"inputSpecification": "<p>The first line contains an integer <span class=\"tex-span\"><i>N</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910000</span>). For <span class=\"tex-span\">1\u2009\u2264\u2009<i>i</i>\u2009\u2264\u2009<i>N</i></span>, the <span class=\"tex-span\"><i>i</i>\u2009+\u20091</span>-th line contains two integers <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">|<i>x</i><sub class=\"lower-index\"><i>i</i></sub>|,\u2009|<i>y</i><sub class=\"lower-index\"><i>i</i></sub>|\u2009\u2264\u200910000</span>) denoting the coordinates of the <span class=\"tex-span\"><i>i</i></span>-th spaceship. The following <span class=\"tex-span\"><i>N</i></span> lines have the same format, denoting the position of bases. It is guaranteed that no two points coincide and no three points are on the same line.</p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": null, "outputSpecification": "<p>The output should have <span class=\"tex-span\"><i>N</i></span> lines. The <span class=\"tex-span\"><i>i</i></span>-th line should contain an integer <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span>, the index of the base to which the <span class=\"tex-span\"><i>i</i></span>-th spaceship is connected. The sequence <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\">1</sub>,\u2009...,\u2009<i>p</i><sub class=\"lower-index\"><i>N</i></sub></span> should form a permutation of <span class=\"tex-span\">1,\u2009...,\u2009<i>N</i></span>.</p><p>It is guaranteed that a solution exists. If there are multiple solutions, you can output any one of them.</p>", "samples": [{"input": "4<br/>6 6<br/>5 1<br/>2 4<br/>4 0<br/>5 4<br/>1 2<br/>2 1<br/>3 5<br/>", "output": "4<br/>1<br/>2<br/>3<br/>"}], "statement": "<p>Now that Heidi knows that she can assign Rebel spaceships to bases (recall the easy subtask), she is asking you: how <span class=\"tex-font-style-it\">exactly</span> to do this? Now, given positions of <span class=\"tex-span\"><i>N</i></span> spaceships and <span class=\"tex-span\"><i>N</i></span> bases on a plane, your task is to connect spaceships and bases with line segments so that: </p><ul> <li> The segments do not intersect. </li><li> Such a connection forms a perfect matching. </li></ul>", "timeLimit": {"unit": "seconds", "value": 5.0}, "title": "E3. Guard Duty (hard)"}{"inputSpecification": "<p>The first line of the input contains two space-separated integer <span class=\"tex-span\"><i>N</i></span> and <span class=\"tex-span\"><i>p</i></span> (<span class=\"tex-span\">2\u2009\u2264\u2009<i>N</i>\u2009\u2264\u2009100\u2009000</span>, <span class=\"tex-span\">2\u2009\u2264\u2009<i>p</i>\u2009\u2264\u200910\u2009000</span>) \u2013 the number of elements in <span class=\"tex-span\"><i>A</i></span>, and the modulo for computing scores, respectively.</p><p>The second line contains <span class=\"tex-span\"><i>N</i></span> space-separated integers which are the elements of <span class=\"tex-span\"><i>A</i></span>. Each integer is from the interval <span class=\"tex-span\">[1,\u20091\u2009000\u2009000]</span>.</p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": "<p>In the first example, the score is maximized if the input sequence is split into two parts as <span class=\"tex-span\">(3,\u20094)</span>, <span class=\"tex-span\">(7,\u20092)</span>. It gives the total score of <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/fc1f9aecea625f3be9a56917d3ba448d669ff278.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>.</p><p>In the second example, the score is maximized if the first part consists of the first three elements, and the second part consists of the rest. Then, the score is <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/ffd0a0f4c65b0578601ae2fe11a80aec5192f53d.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>.</p>", "outputSpecification": "<p>Output the number <span class=\"tex-span\"><i>S</i></span> as described in the problem statement.</p>", "samples": [{"input": "4 10<br/>3 4 7 2<br/>", "output": "16<br/>"}, {"input": "10 12<br/>16 3 24 13 9 8 7 5 12 12<br/>", "output": "13<br/>"}], "statement": "<p>Rebel spy Heidi has just obtained the plans for the Death Star from the Empire and, now on her way to safety, she is trying to break the encryption of the plans (of course they are encrypted \u2013 the Empire may be evil, but it is not stupid!). The encryption has several levels of security, and here is how the first one looks.</p><p>Heidi is presented with a screen that shows her a sequence of integers <span class=\"tex-span\"><i>A</i></span> and a positive integer <span class=\"tex-span\"><i>p</i></span>. She knows that the encryption code is a single number <span class=\"tex-span\"><i>S</i></span>, which is defined as follows:</p><p>Define the <span class=\"tex-font-style-underline\">score</span> of <span class=\"tex-span\"><i>X</i></span> to be the sum of the elements of <span class=\"tex-span\"><i>X</i></span> modulo <span class=\"tex-span\"><i>p</i></span>.</p><p>Heidi is given a sequence <span class=\"tex-span\"><i>A</i></span> that consists of <span class=\"tex-span\"><i>N</i></span> integers, and also given an integer <span class=\"tex-span\"><i>p</i></span>. She needs to split <span class=\"tex-span\"><i>A</i></span> into <span class=\"tex-span\">2</span> parts such that: </p><ul> <li> Each part contains at least <span class=\"tex-span\">1</span> element of <span class=\"tex-span\"><i>A</i></span>, and each part consists of contiguous elements of <span class=\"tex-span\"><i>A</i></span>. </li><li> The two parts do not overlap. </li><li> The total sum <span class=\"tex-span\"><i>S</i></span> of the scores of those two parts is maximized. This is the encryption code. </li></ul><p>Output the sum <span class=\"tex-span\"><i>S</i></span>, which is the encryption code.</p>", "timeLimit": {"unit": "second", "value": 1.0}, "title": "C1. Encryption (easy)"}{"inputSpecification": "<p>The first line of the input contains an integer <span class=\"tex-span\"><i>N</i></span> (<span class=\"tex-span\">2\u2009\u2264\u2009<i>N</i>\u2009\u2264\u20091000</span>) \u2013 the number of planets in the galaxy.</p><p>The next <span class=\"tex-span\"><i>N</i>\u2009-\u20091</span> lines describe the hyperspace tunnels between the planets. Each of the <span class=\"tex-span\"><i>N</i>\u2009-\u20091</span> lines contains two space-separated integers <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>u</i>,\u2009<i>v</i>\u2009\u2264\u2009<i>N</i></span>) indicating that there is a bidirectional hyperspace tunnel between the planets <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span>. It is guaranteed that every two planets are connected by a path of tunnels, and that each tunnel connects a different pair of planets.</p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": "<p>In the first example, only planets <span class=\"tex-span\">2</span>, <span class=\"tex-span\">3</span> and <span class=\"tex-span\">5</span> are connected by a single tunnel.</p><p>In the second example, the <span class=\"tex-font-style-it\">remote</span> planets are <span class=\"tex-span\">2</span> and <span class=\"tex-span\">3</span>.</p><p>Note that this problem has only two versions \u2013 easy and medium.</p>", "outputSpecification": "<p>A single integer denoting the number of remote planets.</p>", "samples": [{"input": "5<br/>4 1<br/>4 2<br/>1 3<br/>1 5<br/>", "output": "3<br/>"}, {"input": "4<br/>1 2<br/>4 3<br/>1 4<br/>", "output": "2<br/>"}], "statement": "<p>The Resistance is trying to take control over all planets in a particular solar system. This solar system is shaped like a tree. More precisely, some planets are connected by bidirectional hyperspace tunnels in such a way that there is a path between every pair of the planets, but removing any tunnel would disconnect some of them.</p><p>The Resistance already has measures in place that will, when the time is right, enable them to control every planet that is not <span class=\"tex-font-style-it\">remote</span>. A planet is considered to be remote if it is connected to the rest of the planets only via a single hyperspace tunnel.</p><p>How much work is there left to be done: that is, how many remote planets are there?</p>", "timeLimit": {"unit": "seconds", "value": 2.0}, "title": "B1. Maximum Control (easy)"}{"inputSpecification": "<p>The first line of the input contains <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u2009100</span>) and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>m</i>\u2009\u2264\u2009<i>n</i></span>). The second line contains <span class=\"tex-span\"><i>n</i></span> integers in the range <span class=\"tex-span\">{1,\u20092,\u2009...,\u2009<i>m</i>}</span> representing colors of the lightsabers of the subsequent Jedi Knights. The third line contains <span class=\"tex-span\"><i>m</i></span> integers <span class=\"tex-span\"><i>k</i><sub class=\"lower-index\">1</sub>,\u2009<i>k</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>k</i><sub class=\"lower-index\"><i>m</i></sub></span> (with <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/028ad21fa922d9cfdf096d658a7e651e74feddcf.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>) \u2013 the desired counts of lightsabers of each color from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>m</i></span>.</p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": null, "outputSpecification": "<p>Output <span class=\"tex-font-style-tt\">YES</span> if an interval with prescribed color counts exists, or output <span class=\"tex-font-style-tt\">NO</span> if there is none.</p>", "samples": [{"input": "5 2<br/>1 1 2 2 1<br/>1 2<br/>", "output": "YES<br/>"}], "statement": "<p>There is unrest in the Galactic Senate. Several thousand solar systems have declared their intentions to leave the Republic. Master Heidi needs to select the Jedi Knights who will go on peacekeeping missions throughout the galaxy. It is well-known that the success of any peacekeeping mission depends on the colors of the lightsabers of the Jedi who will go on that mission. </p><p>Heidi has <span class=\"tex-span\"><i>n</i></span> Jedi Knights standing in front of her, each one with a lightsaber of one of <span class=\"tex-span\"><i>m</i></span> possible colors. She knows that for the mission to be the most effective, she needs to select some contiguous interval of knights such that there are exactly <span class=\"tex-span\"><i>k</i><sub class=\"lower-index\">1</sub></span> knights with lightsabers of the first color, <span class=\"tex-span\"><i>k</i><sub class=\"lower-index\">2</sub></span> knights with lightsabers of the second color, <span class=\"tex-span\">...</span>, <span class=\"tex-span\"><i>k</i><sub class=\"lower-index\"><i>m</i></sub></span> knights with lightsabers of the <span class=\"tex-span\"><i>m</i></span>-th color. Help her find out if this is possible.</p>", "timeLimit": {"unit": "second", "value": 1.0}, "title": "F1. Lightsabers (easy)"}{"inputSpecification": "<p>The first line of the input contains <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20092\u00b710<sup class=\"upper-index\">5</sup></span>), <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>m</i>\u2009\u2264\u2009<i>n</i></span>) and <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>k</i>\u2009\u2264\u2009<i>n</i></span>). The second line contains <span class=\"tex-span\"><i>n</i></span> integers in the range <span class=\"tex-span\">{1,\u20092,\u2009...,\u2009<i>m</i>}</span> representing colors of the lightsabers of subsequent Jedi Knights.</p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": null, "outputSpecification": "<p>Output one number: the number of differently colored collections of <span class=\"tex-span\"><i>k</i></span> lightsabers modulo <span class=\"tex-span\">1009</span>.</p>", "samples": [{"input": "4 3 2<br/>1 2 3 2<br/>", "output": "4<br/>"}], "statement": "<p>There used to be unrest in the Galactic Senate. Several thousand solar systems had declared their intentions to leave the Republic. But fear not! Master Heidi was able to successfully select the Jedi Knights that have restored peace in the galaxy. However, she knows that evil never sleeps and a time may come when she will need to pick another group of Jedi Knights. She wants to be sure she has enough options to do so.</p><p>There are <span class=\"tex-span\"><i>n</i></span> Jedi Knights, each of them with a lightsaber of one of <span class=\"tex-span\"><i>m</i></span> colors. Given a number <span class=\"tex-span\"><i>k</i></span>, compute the number of differently colored collections of <span class=\"tex-span\"><i>k</i></span> lightsabers that some <span class=\"tex-span\"><i>k</i></span> Jedi Knights might have. Jedi Knights with lightsabers of the same color are indistinguishable (it's not the person, it's the lightsaber color that matters!), and their order does not matter; that is, we consider two collections of Jedi Knights to be different if and only if their vectors of counts of lightsabers of each color (like what you were given in the easy and the medium versions) are different. We count all subsets, not only contiguous subsegments of the input sequence. Output the answer modulo <span class=\"tex-span\">1009</span>.</p>", "timeLimit": {"unit": "seconds", "value": 4.0}, "title": "F3. Lightsabers (hard)"}{"inputSpecification": "<p>The first line contains two integers <span class=\"tex-span\"><i>K</i></span>, <span class=\"tex-span\"><i>N</i></span> (<span class=\"tex-span\">2\u2009\u2264\u20092<i>K</i>\u2009\u2264\u2009<i>N</i>\u2009\u2264\u2009500000</span>, <span class=\"tex-span\"><i>K</i>\u2009\u2264\u20095000</span>). The second line contains <span class=\"tex-span\"><i>N</i></span> distinct integers <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\">1</sub>,\u2009<i>t</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>t</i><sub class=\"lower-index\"><i>N</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>t</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>) representing the times when Heidi leaves hyperspace.</p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": "<p>In the first example, there are five valid schedules: <span class=\"tex-span\">[1,\u20094],\u2009[6,\u20097]</span> with total time 4, <span class=\"tex-span\">[1,\u20094],\u2009[6,\u200912]</span> with total time 9, <span class=\"tex-span\">[1,\u20094],\u2009[7,\u200912]</span> with total time 8, <span class=\"tex-span\">[1,\u20096],\u2009[7,\u200912]</span> with total time 10, and <span class=\"tex-span\">[4,\u20096],\u2009[7,\u200912]</span> with total time 7. So the answer is 4.</p><p>In the second example, there is only 1 valid schedule: <span class=\"tex-span\">[1,\u20092],\u2009[3,\u20094],\u2009[5,\u20096]</span>.</p><p>For the third example, one possible schedule with total time 6 is: <span class=\"tex-span\">[1,\u20093],\u2009[4,\u20095],\u2009[14,\u200915],\u2009[23,\u200925]</span>.</p>", "outputSpecification": "<p>Output only one integer: the minimum time spent on meetings. </p>", "samples": [{"input": "2 5<br/>1 4 6 7 12<br/>", "output": "4<br/>"}, {"input": "3 6<br/>6 3 4 2 5 1<br/>", "output": "3<br/>"}, {"input": "4 12<br/>15 7 4 19 3 30 14 1 5 23 17 25<br/>", "output": "6<br/>"}], "statement": "<p>Princess Heidi decided to give orders to all her <span class=\"tex-span\"><i>K</i></span> Rebel ship commanders in person. Unfortunately, she is currently travelling through hyperspace, and will leave it only at <span class=\"tex-span\"><i>N</i></span> specific moments <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\">1</sub>,\u2009<i>t</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>t</i><sub class=\"lower-index\"><i>N</i></sub></span>. The meetings with commanders must therefore start and stop at those times. Namely, each commander will board her ship at some time <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> and disembark at some later time <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>j</i></sub></span>. Of course, Heidi needs to meet with all commanders, and no two meetings can be held during the same time. Two commanders cannot even meet at the beginnings/endings of the hyperspace jumps, because too many ships in one position could give out their coordinates to the enemy. </p><p>Your task is to find minimum time that Princess Heidi has to spend on meetings, with her schedule satisfying the conditions above. </p>", "timeLimit": {"unit": "seconds", "value": 3.0}, "title": "E2. Guard Duty (medium)"}{"inputSpecification": "<p>The first line of the input contains <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20092\u00b710<sup class=\"upper-index\">5</sup></span>) and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>m</i>\u2009\u2264\u2009<i>n</i></span>). The second line contains <span class=\"tex-span\"><i>n</i></span> integers in the range <span class=\"tex-span\">{1,\u20092,\u2009...,\u2009<i>m</i>}</span> representing colors of the lightsabers of the subsequent Jedi Knights. The third line contains <span class=\"tex-span\"><i>m</i></span> integers <span class=\"tex-span\"><i>k</i><sub class=\"lower-index\">1</sub>,\u2009<i>k</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>k</i><sub class=\"lower-index\"><i>m</i></sub></span> (with <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/028ad21fa922d9cfdf096d658a7e651e74feddcf.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>) \u2013 the desired counts of Jedi Knights with lightsabers of each color from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>m</i></span>.</p>", "memoryLimit": {"unit": "megabytes", "value": 256.0}, "note": null, "outputSpecification": "<p>Output one number: the minimum number of Jedi Knights that need to be removed from the sequence so that, in what remains, there is an interval with the prescribed counts of lightsaber colors. If this is not possible, output <span class=\"tex-span\">\u2009-\u20091</span>.</p>", "samples": [{"input": "8 3<br/>3 3 1 2 2 1 1 3<br/>3 1 1<br/>", "output": "1<br/>"}], "statement": "<p>There is unrest in the Galactic Senate. Several thousand solar systems have declared their intentions to leave the Republic. Master Heidi needs to select the Jedi Knights who will go on peacekeeping missions throughout the galaxy. It is well-known that the success of any peacekeeping mission depends on the colors of the lightsabers of the Jedi who will go on that mission. </p><p>Heidi has <span class=\"tex-span\"><i>n</i></span> Jedi Knights standing in front of her, each one with a lightsaber of one of <span class=\"tex-span\"><i>m</i></span> possible colors. She knows that for the mission to be the most effective, she needs to select some contiguous interval of knights such that there are exactly <span class=\"tex-span\"><i>k</i><sub class=\"lower-index\">1</sub></span> knights with lightsabers of the first color, <span class=\"tex-span\"><i>k</i><sub class=\"lower-index\">2</sub></span> knights with lightsabers of the second color, <span class=\"tex-span\">...</span>, <span class=\"tex-span\"><i>k</i><sub class=\"lower-index\"><i>m</i></sub></span> knights with lightsabers of the <span class=\"tex-span\"><i>m</i></span>-th color.</p><p>However, since the last time, she has learned that it is not always possible to select such an interval. Therefore, she decided to ask some Jedi Knights to go on an indefinite unpaid vacation leave near certain pits on Tatooine, if you know what I mean. Help Heidi decide what is the minimum number of Jedi Knights that need to be let go before she is able to select the desired interval from the subsequence of remaining knights.</p>", "timeLimit": {"unit": "second", "value": 1.0}, "title": "F2. Lightsabers (medium)"}